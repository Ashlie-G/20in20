{"ast":null,"code":"// Returns a string value for the passed array.\n//\n//   attributeValue(['', 'one', null, 'two', 'three ']) // 'one two three'\n//\nexport var attributeValue = function attributeValue() {\n  var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var value = values.filter(function (v) {\n    return v && String(v).length;\n  }).map(function (v) {\n    return v.trim();\n  }).join(' ').trim();\n  return value.length ? value : null;\n}; // Returns an array for the passed string value by splitting on whitespace.\n//\n//   attributeValues('one two three ') // ['one', 'two', 'three']\n//\n\nexport var attributeValues = function attributeValues(value) {\n  if (!value) return [];\n  if (!value.length) return [];\n  return value.split(' ').filter(function (v) {\n    return v.trim().length;\n  });\n}; // Extracts attributes from a DOM element.\n//\n\nexport var extractElementAttributes = function extractElementAttributes(element) {\n  var attrs = Array.prototype.slice.call(element.attributes).reduce(function (memo, attr) {\n    memo[attr.name] = attr.value;\n    return memo;\n  }, {});\n  attrs.value = element.value;\n  attrs.checked = !!element.checked;\n  attrs.selected = !!element.selected;\n  attrs.tag_name = element.tagName;\n\n  if (element.tagName.match(/select/i)) {\n    if (element.multiple) {\n      var checkedOptions = Array.prototype.slice.call(element.querySelectorAll('option:checked'));\n      attrs.values = checkedOptions.map(function (o) {\n        return o.value;\n      });\n    } else if (element.selectedIndex > -1) {\n      attrs.value = element.options[element.selectedIndex].value;\n    }\n  }\n\n  return attrs;\n}; // Finds an element based on the passed represention of the DOM element's attributes.\n//\n// NOTE: This is the same set of attributes extrated via extractElementAttributes and forwarded to the server side reflex.\n// SEE: stimulate()\n// SEE: StimulusReflex::Channel#broadcast_morph\n// SEE: StimulusReflex::Channel#broadcast_error\n//\n\nexport var findElement = function findElement(attributes) {\n  attributes = attributes || {};\n  var elements = [];\n\n  if (attributes.id) {\n    elements = document.querySelectorAll(\"#\".concat(attributes.id));\n  } else {\n    var selectors = [];\n\n    for (var key in attributes) {\n      if (key.includes('.')) continue;\n      if (key === 'tagName') continue;\n      if (key === 'value') continue;\n      if (key === 'checked') continue;\n      if (key === 'selected') continue;\n      if (!Object.prototype.hasOwnProperty.call(attributes, key)) continue;\n      selectors.push(\"[\".concat(key, \"=\\\"\").concat(attributes[key], \"\\\"]\"));\n    }\n\n    try {\n      elements = document.querySelectorAll(selectors.join(''));\n    } catch (error) {\n      console.error('StimulusReflex encountered an error identifying the Stimulus element. Consider adding an #id to the element.', error, attributes);\n    }\n  }\n\n  var element = elements.length === 1 ? elements[0] : null;\n  return element;\n};","map":null,"metadata":{},"sourceType":"module"}